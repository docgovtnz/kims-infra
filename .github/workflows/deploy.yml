name: deploy
run-name: Deployment to ${{inputs.environment}} by ${{ github.actor }} ${{ github.event.head_commit.message }} (${{ inputs.description }})
on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: dev
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

  repository_dispatch:
    types: [dev,uat,test,prod]

jobs:
  dump:
    runs-on: ubuntu-latest
    environment: ${{github.event.action}}
    steps:
      - name: Dump context
        uses: crazy-max/ghaction-dump-context@v1
  deploy-stack:
    runs-on: ubuntu-latest
    environment: ${{github.event.action}}
    steps:
      - name: Checkout infra
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          clean: false
      - name: pwd
        run: pwd
      - name: ls
        run: ls
      - name: checkout settings
        uses: actions/checkout@v3
        with:
          repository: docgovtnz/kims-settings
          ref: main
          token: ${{ secrets.GH_PAT }}
          fetch-depth: 0
          path: './settings'
      - name: pwd
        run: pwd
      - name: ls
        run: ls
      - name: Move config files
        run: mv settings/* .
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - name: npm ci
        working-directory: '.'
        run: npm ci #--userconfig=./.npmrc
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: npm run build
        working-directory: '.'
        run: npm run build

      - name: install cdk
        working-directory: '.'
        run: | 
          npm i -g
          source ~/.bashrc 

      - name: pwd
        run: pwd
      - name: ls
        run: ls
      - name: cdk deploy
        uses: youyo/aws-cdk-github-actions@v2
        with:
          cdk_subcommand: 'synth'
          cdk_args: '--debug'
          working_dir: '.'
          debug_log: true
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          ENV_HOME: 'env'
          ENV_NAME: 'dev'
          AWS_DEFAULT_REGION: ap-southeast-2
          AWS_DEFAULT_OUTPUT: json